1820alpha008からの修正
shapeタグのスペルミス修正
WINAPI使用時のメモリリーク修正
三項演算子'?'の前に'#'が発見された場合のエラーメッセージを修正





以下1820alphaの更新点

"CALLTRAINTEND"スペルミス修正
DRAWLINEFORM命令、GETLINESTR関数に空文字列を渡すとフリーズする不具合を修正
TINPUT系命令のタイムアウト後、マウス直下のボタンが選択されない不具合を修正
PRINT_IMG, PRINT_RECT, PRINT_SPACE命令追加
HTML_POPPRINTINGSTR関数追加
三項演算子'?'の前に'#'が発見された場合のエラーメッセージを修正



HTML_POPPRINTINGSTR()
　現在PRINT中の文字列バッファをHtmlで取得し、バッファを空にします

PRINT_IMG <文字列式>
　行中に指定した画像を表示する。

PRINT_RECT <数式>
　行中に横幅がフォントサイズの<数式>%である長方形を表示する。
　SETCOLOR命令によりフォント色と同様に色を変えられる。

PRINT_RECT <数式>, <数式>, <数式>, <数式>
　行中にx,y,横幅,縦幅がそれぞれ引数%である長方形を表示する。
　SETCOLOR命令によりフォント色と同様に色を変えられる。

PRINT_SPACE <数式>
　フォントサイズの<数式>%分だけ何も表示しないスペースを作る。

HTML_PRINT命令にタグ追加
　<img src='～～' srcb='～～'>
　行中に指定した画像を表示する。
　src属性は必須、srcb属性は任意
　srcにはresourceフォルダのcsvに指定したリソース名を入れる
　画像は縦横比を維持したまま、縦幅がフォントサイズと一致するように縮小又は拡大して表示される
　srcbにはボタン選択時に表示されるべきリソース名を入れる
　画像は縦幅がフォントサイズ、横幅がsrcと同じになるように縮小又は拡大して表示される

　<shape type='rect' param='～～' color='～～' bcolor='～～'>
　行中に指定した図形を描画する。
　type, param属性は必須、color, bcolor属性は任意
　typeは現在rect(長方形)のみ。
　paramには図形描画のためのパラメータをフォントサイズとの比率(百分率)で指定する
　複数の値を入れるにはカンマで区切る
　　type='rect'ではparamには1又は4つの数字を入れる
　　paramが1つのとき長方形の横の意味になる
　　　<shape type='rect' param='400'>は横幅がフォントサイズの400%である長方形になる
　　paramが4つのときx,y,横幅,縦幅の順で使用される
　　　<shape type='rect' param='0,25,400,50'>は行の上下中央に縦幅がフォントサイズの50%の長方形を描画する
　　　param='400'　はparam='0,0,400,100'に等しい。
　colorには図形の色を指定する。指定のフォーマットは<font>タグと同じ。
　bcolorには図形の選択中の色を指定する。

　<shape type='space' param='～～'>
　指定した幅だけ何も表示しない。
　　<shape type='space' param='400'>はフォントサイズの400%の区間だけ何も描画しない。

<img>と<shape>タグは文法的に正しければ属性値が不正であってもエラーとはならずにhtmlタグを表示する。
タグが表示されるケースは存在しないリソースを参照したり、行の高さからはみ出るshapeを描画しようとした場合など。
またログ出力においては図形やイメージファイルが使えないのでhtmlタグの形で出力される。




リソースファイル指定
実行ファイルのフォルダにresourcesフォルダを作成し、その中にリソースファイルを用意する。
ファイルはresourcesフォルダの直下におく必要がある。サブフォルダは不可。
画像の表示のためには画像ファイルとcsvファイルが必要となる
画像ファイルはbmp、jpg、png形式で用意しresourcesフォルダ内に置く。
csvファイルは名前は何でもよい。書式は以下の通り
;リソース名,元ファイル名,x,y,width,height
リソース名は<img src='～～'>のsrc属性の属性値として使用する名前である。重複があってはならない。
元ファイル名は画像ファイルの名前。拡張子含む。
x,y,width,heightに元画像の中の使用する部分をピクセル単位で指定する。
x,y,width,heightは省略することもでき、その場合は画像全体が使用される。

csvファイルで指定された全ての画像ファイルはEmueraの起動時にメモリ上に展開され終了するまでメモリを占有する。
大量の画像ファイルを読ませるよりも画像を単一のファイルに合成し範囲を指定して利用した方がメモリ的にも速度的にも有利と思われる。
コンフィグの描画インタフェースにWINAPIを指定している場合、透過処理及びアルファブレンドは行われない。
描画インタフェースがGraphics又はTextRendererの場合には透過処理及びアルファブレンドが行われる。
画像リソースのheightがフォントサイズと一致しない場合、画像は拡大又は縮小される。
拡大縮小もWINAPIとGraphics又はTextRendererでやや異なる。
可能なら画像リソースの縦幅はフォントサイズと一致させることが望ましい。





